객체
  - Class: 객체 설계 도면
    1. 필드(속성): 멤버변수, 전역변수
    2. 메소드(행위): 멤버함수
    3. 생성자 메소드
  - 객체를 사용하기 위해서는 반드시 객체 생성을 통해서 사용
    Class → 객체 생성 → 인스턴스
                     ↓
 BoardDTO bDto = new BoardDTO();
                        = (객체 생성 연산자) (생성자 메소드);
  - 객체 생성을 위해서는 반드시 1개 이상의 생성자 메소드가 필요
  - 생성자 메소드 생략시, JAVA가 디폴트 생성자 생성
  - 생성자 메소드 역할
    1. 객체를 생성하는 역할
    2. 객체 생성과 동시에 특정 작업을 하고 싶을 때
       가. 필드 초기화
	      ㄴ 객체 생성 후 인스턴스를 사용해서 필드 초기화 보다
		  생성자를 사용한 필드 초기화가 훨씬 효율적
		     ㄴ 기능별로 초기화가 필요한 필드들을 정리하고 
                         → 각각 생성자 함수로 구현
                            ex) 필드 1, 2, 3, 4, 5
                                 생성자 (1, 2);
			         생성자 (1, 2, 3, 4, 5);
              ※ 1개의 클래스 내에서 동일한 이름의 변수, 함수 선언 불가!
                  → 메서드 오버로딩
                       1) 매개변수의 개수가 다름
                       2) 매개변수의 자료형이 다름
                       3) 매개변수의 순서가 다름
       나. 특정 함수 실행
       ※ 윈도우 시작프로그램과 비슷

접근제한자
  - Class, Method, Field 접근 범위 설정
  - public: 프로젝트
  - protected: 패키지
  - [default]: 패키지
  - private: 클래스


final 변수: 상수
final 함수: 메서드 오버라이딩 불가
final 클래스: 상속 불가
        