/*
 * ■ 인터페이스와 추상클래스 비교
 *  - 공통점
 *   1. 추상메서드 사용 → 반드시 재정의해서 사용
 *   2. 객체 타입을 정의하는 것이 목적
 *      → 객체 생성이 아닌 정의가 목적 (통일성, 강제성)
 *   3. 다형성 가능
 *   
 *  - 차이점
 *   1. 상속과 구현
 *      → 추상클래스는 상속 (다중상속 불가)
 *      → 인터페이스는 구현 (다중구현 가능)
 *   2. 구성요소 차이
 *      → 추상클래스: 일반 클래스와 동일 + 추상메서드
 *      → 인터페이스: 상수, 추상메서드
 *   인터페이스 - 인터페이스 : 상속
 *   클래스 - 클래스 : 상속
 *   인터페이스 - 클래스 : 구현(다중구현)
 *   
 *   하나의 클래스 내에 상속과 구현을 모두 사용 가능
 *    - 상속, 구현 순서로 작성
 *    
 * ■ 인터페이스
 *  1. 객체의 사용방법을 정의한 타입
 *  2. 자바 버전별로 조금씩 상이..
 *   - 인터페이스 + 어떤걸 추가..
 *   ex) 8버전: 상수 + 추상메서드 + 디폴트메서드 + 정적메서드
 *  3. 인터페이스는 상수와 추상메서드만 올 수 있음
 *   - 상수: public static final
 *   - 메소드: abstract 
 *   생략 가능!
 *  4. 인터페이스는 모두 public만 사용
 *  5. 자식 재정의할 때도 public만 사용 가능!
 *  6. 인터페이스는 생성 자체를 interface로 생성
 *  7. 인터페이스의 이름은 대문자 I로 시작
 *  8. 인터페이스로부터 구현된 클래스는 이름 뒤에 Impl을 붙임
 *  9. 구현은 implements 사용 → 다중 구현 가능!
 *  10. 인터페이스는 객체 X, 객체 타입 사용
 *  11. 인터페이스들 끼리는 다중 상속 가능
 */

package ch08_interface;

public interface Interface01 {

}
